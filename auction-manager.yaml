apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
  labels:
    app: auction-manager
  name: auction-manager
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: auction-manager
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: auction-manager
    spec:
      volumes:
        - name: google-cloud-key
          secret:
            secretName: guardsmen-auction-manager-credentials
      containers:
      - name: auction-manager
        args:
        - /gunicorn.sh
        volumeMounts:
          - name: google-cloud-key
            mountPath: /var/secrets/google
        env:
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: /var/secrets/google/auction-manager.credentials.json
          - name: DEFAULT_FILE_STORAGE
            value: storages.backends.gcloud.GoogleCloudStorage
          - name: USE_DOCKER
            value: "yes"
          - name: DJANGO_SETTINGS_MODULE
            value: config.settings.production
          - name: DJANGO_DEBUG
            value: "True"
          - name: DATABASE_URL
            valueFrom:
              secretKeyRef:
                name: credentials
                key: DATABASE_URL
          - name: DJANGO_SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: credentials
                key: DJANGO_SECRET_KEY
        image: auction-manager_django
        name: auction-manager
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5000
        resources: {}
      - name: cloudsql-proxy
        image: gcr.io/cloudsql-docker/gce-proxy:1.11
        command: ["/cloud_sql_proxy",
                  "-instances=guardsmen:us-west1:basic=tcp:5432",
                  "-credential_file=/secrets/cloudsql/auction-manager.credentials.json"]
        # [START cloudsql_security_context]
        securityContext:
          runAsUser: 2  # non-root user
          allowPrivilegeEscalation: false
        # [END cloudsql_security_context]
        volumeMounts:
          - name: google-cloud-key
            mountPath: /secrets/cloudsql
            readOnly: true
      restartPolicy: Always
status: {}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: auction-manager
  name: auction-manager-service
spec:
  externalTrafficPolicy: Cluster
  ports:
  - port: 80
    protocol: TCP
    targetPort: 5000
  selector:
    app: auction-manager
  sessionAffinity: None
  type: LoadBalancer
status:
  loadBalancer: {}
---
# ***Uncomment to enable PodPreset config***
# apiVersion: settings.k8s.io/v1alpha1
# kind: PodPreset
# metadata:
#   name: manager-config
# spec:
#   selector:
#     matchLabels:
#       app: auction-manager
#   volumes:
#     - name: google-cloud-key
#       secret:
#         secretName: guardsmen-auction-manager-storage-credentials
#   volumeMounts:
#     - name: google-cloud-key
#       mountPath: /var/secrets/google
#   env:
#     - name: GOOGLE_APPLICATION_CREDENTIALS
#       value: /var/secrets/google/auction-manager.credentials.json
#     - name: DEFAULT_FILE_STORAGE
#       value: storages.backends.gcloud.GoogleCloudStorage
#     - name: USE_DOCKER
#       value: "yes"
#     - name: DJANGO_SETTINGS_MODULE
#       value: config.settings.production
#     - name: DJANGO_DEBUG
#       value: "False"
#     - name: DATABASE_URL
#       valueFrom:
#         secretKeyRef:
#           name: credentials
#           key: DATABASE_URL
#     - name: DJANGO_SECRET_KEY
#       valueFrom:
#         secretKeyRef:
#           name: credentials
#           key: DJANGO_SECRET_KEY
# ---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  labels:
    app: auction-manager
  name: auction-manager-job-update
spec:
  schedule: "0/10 * * * *"
  jobTemplate:
    spec:
      template:
        spec:
          volumes:
          - name: google-cloud-key
            secret:
              secretName: guardsmen-auction-manager-storage-credentials
          volumes:
            - name: google-cloud-key
              secret:
                secretName: guardsmen-auction-manager-storage-credentials
          containers:
          - name: auction-manager
            args:
              - python
              - manage.py
              - get_donations
            volumeMounts:
              - name: google-cloud-key
                mountPath: /var/secrets/google
            env:
              - name: GOOGLE_APPLICATION_CREDENTIALS
                value: /var/secrets/google/auction-manager.credentials.json
              - name: DEFAULT_FILE_STORAGE
                value: storages.backends.gcloud.GoogleCloudStorage
              - name: USE_DOCKER
                value: "yes"
              - name: DJANGO_SETTINGS_MODULE
                value: config.settings.production
              - name: DJANGO_DEBUG
                value: "False"
              - name: DATABASE_URL
                valueFrom:
                  secretKeyRef:
                    name: credentials
                    key: DATABASE_URL
              - name: DJANGO_SECRET_KEY
                valueFrom:
                  secretKeyRef:
                    name: credentials
                    key: DJANGO_SECRET_KEY
              - name: WUFOO_API_KEY
                valueFrom:
                  secretKeyRef:
                    name: credentials
                    key: WUFOO_API_KEY
            image: auction-manager_django
            imagePullPolicy: IfNotPresent
          - name: cloudsql-proxy
            image: gcr.io/cloudsql-docker/gce-proxy:1.11
            command: ["/cloud_sql_proxy",
                      "-instances=guardsmen:us-west1:basic=tcp:5432",
                      "-credential_file=/secrets/cloudsql/auction-manager.credentials.json"]
            # [START cloudsql_security_context]
            securityContext:
              runAsUser: 2  # non-root user
              allowPrivilegeEscalation: false
            # [END cloudsql_security_context]
            volumeMounts:
              - name: google-cloud-key
                mountPath: /secrets/cloudsql
                readOnly: true
          restartPolicy: Never
      backoffLimit: 4
